[gd_scene load_steps=28 format=3 uid="uid://bix8dqyx6wn6c"]

[ext_resource type="Texture2D" uid="uid://54furj5lgxfw" path="res://Textures/Characters/Player.png" id="2_5qatb"]
[ext_resource type="Shader" path="res://Shaders/Hit Flash.gdshader" id="4_c6p70"]
[ext_resource type="PackedScene" uid="uid://bfmjbl00kj2vc" path="res://Scenes/Components/hurtbox.tscn" id="6_e3hcv"]

[sub_resource type="GDScript" id="GDScript_5mu8x"]
script/source = "extends CharacterBody2D

#Data
var bullets_amount : int = 30

@export var movement_data : MovementData
@export var stats : Stats
@export var active: bool = true
@export var camera : Camera2D
@onready var camera_ref: String = get_tree().get_first_node_in_group(\"Camera\").get_path()

#Refrences
@onready var animator : AnimatedSprite2D = $AnimatedSprite2D
@onready var guns_animator : AnimationPlayer = $ShootingAnimationPlayer
@onready var hit_animator : AnimationPlayer = $HitAnimationPlayer
@onready var hand : Node2D = $Hand
@onready var pistol : Sprite2D = $Hand/Pivot/Pistol
@onready var pistol_bullet_marker : Marker2D = $Hand/Pivot/Pistol/PistolBulletMarker
@onready var remote: RemoteTransform2D = $RemoteTransform2D

#Load Scenes
@onready var muzzle_load : PackedScene = preload(\"res://Scenes/Particles/muzzle.tscn\")
@onready var bullet_load : PackedScene = preload(\"res://Scenes/Props/bullet.tscn\")
@onready var death_particle_load : PackedScene = preload(\"res://Scenes/Particles/player_death_particle.tscn\")

func _ready():
	stats.health = stats.max_health
	EventManager.bullets_amount = bullets_amount
	EventManager.update_bullet_ui.emit()

func _physics_process(delta):
	apply_gravity(delta)

	if not active:
		velocity.x = 0
		move_and_slide()
		return
	
	var input_vector = Input.get_axis(\"move_left\",\"move_right\")
	if input_vector != 0:
		apply_acceleration(input_vector, delta)
	else:
		apply_friction(delta)
	
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		jump()
	
	if Input.is_action_just_pressed(\"shoot\"):
		if bullets_amount > 0:
			guns_animator.play(\"Shoot\")
	
	move_and_slide()
	animate(input_vector)

func apply_acceleration(input_vector, delta):
	velocity.x = move_toward(velocity.x, movement_data.max_speed * input_vector, movement_data.acceleration * delta)

func apply_friction(delta):
	velocity.x = move_toward(velocity.x, 0, movement_data.friction * delta)

func apply_gravity(delta):
	if not is_on_floor():
		velocity.y += movement_data.gravity * movement_data.gravity_scale * delta

func knockback(vector):
	velocity = velocity.move_toward(vector * movement_data.knockback_force, movement_data.acceleration)

func jump():
	velocity.y = -movement_data.jump_strength
	AudioManager.play_sound(AudioManager.JUMP)

func shoot():
	bullets_amount -= 1
	EventManager.bullets_amount -= 1
	EventManager.update_bullet_ui.emit()
	var mouse_position : Vector2 = (get_global_mouse_position() - global_position).normalized()
	var muzzle = muzzle_load.instantiate()
	var bullet = bullet_load.instantiate()
	pistol_bullet_marker.add_child(muzzle)
	bullet.global_position = pistol_bullet_marker.global_position
	bullet.target_vector = mouse_position
	bullet.rotation = mouse_position.angle()
	get_tree().current_scene.add_child(bullet)
	AudioManager.play_sound(AudioManager.SHOOT)

func small_shake():
	camera.small_shake()

func animate(input_vector):
	var mouse_position : Vector2 = (get_global_mouse_position() - global_position).normalized()
	if mouse_position.x > 0 and animator.flip_h:
		animator.flip_h = false
	elif mouse_position.x < 0 and not animator.flip_h:
		animator.flip_h = true
	
	hand.rotation = mouse_position.angle()
	if hand.scale.y == 1 and mouse_position.x < 0:
		hand.scale.y = -1
	elif hand.scale.y == -1 and mouse_position.x > 0:
		hand.scale.y = 1
	
	if is_on_floor():
		if input_vector != 0:
			animator.play(\"Run\")
		else:
			animator.play(\"Idle\")
	else:
		if velocity.y > 0:
				animator.play(\"Fall\")
		else:
				animator.play(\"Jump\")

func _on_hurtbox_area_entered(_area):
	hit_animator.set_deferred(\"play\", \"Hit\")
	EventManager.update_health_ui.emit()
	if stats.health <= 0:
		die()
	else:
		AudioManager.play_sound(AudioManager.HURT)
		EventManager.frame_freeze.emit()

func die():
	AudioManager.play_sound(AudioManager.DEATH)
	var death_particle = death_particle_load.instantiate()
	death_particle.global_position = global_position
	get_tree().current_scene.add_child(death_particle)
	EventManager.form_destroyed.emit()

func active_camera(activation: bool) -> void:
	if activation:
		remote.remote_path = camera_ref
		camera = get_tree().get_first_node_in_group(\"Camera\")
	else:
		remote.remote_path = \"\"
"

[sub_resource type="Resource" id="Resource_v00pk"]
metadata/__load_path__ = "res://Data/Movement Data/Player Movement Data.tres"

[sub_resource type="Resource" id="Resource_8wiu6"]
metadata/__load_path__ = "res://Data/Stats/Player Stats.tres"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nbr8w"]
shader = ExtResource("4_c6p70")
shader_parameter/active = false

[sub_resource type="AtlasTexture" id="AtlasTexture_cbpyb"]
atlas = ExtResource("2_5qatb")
region = Rect2(96, 48, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_7xxga"]
atlas = ExtResource("2_5qatb")
region = Rect2(0, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_8ov8p"]
atlas = ExtResource("2_5qatb")
region = Rect2(48, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_l8v5i"]
atlas = ExtResource("2_5qatb")
region = Rect2(96, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_o5aqw"]
atlas = ExtResource("2_5qatb")
region = Rect2(48, 48, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_8arge"]
atlas = ExtResource("2_5qatb")
region = Rect2(144, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_6vrm8"]
atlas = ExtResource("2_5qatb")
region = Rect2(0, 0, 48, 48)

[sub_resource type="AtlasTexture" id="AtlasTexture_86cm7"]
atlas = ExtResource("2_5qatb")
region = Rect2(0, 48, 48, 48)

[sub_resource type="SpriteFrames" id="SpriteFrames_bx4yl"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_cbpyb")
}],
"loop": true,
"name": &"Fall",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7xxga")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8ov8p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l8v5i")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8ov8p")
}],
"loop": true,
"name": &"Idle",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_o5aqw")
}],
"loop": true,
"name": &"Jump",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_8arge")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6vrm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_86cm7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6vrm8")
}],
"loop": true,
"name": &"Run",
"speed": 10.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_k161k"]
radius = 3.0
height = 24.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dbnn4"]
shader = ExtResource("4_c6p70")
shader_parameter/active = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_gpe5m"]
size = Vector2(6, 24)

[sub_resource type="Animation" id="Animation_mlu16"]
length = 1.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Hand/Pivot/Pistol:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(10, -4)]
}

[sub_resource type="Animation" id="Animation_creca"]
resource_name = "Shoot"
length = 0.2
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Hand/Pivot/Pistol:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(10, -4), Vector2(4, -4), Vector2(10, -4)]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"shoot"
}]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"small_shake"
}]
}

[sub_resource type="Animation" id="Animation_8vmw1"]
resource_name = "normal"
length = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Hand/Pivot/Pistol:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(10, -4)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_x67tq"]
_data = {
"RESET": SubResource("Animation_mlu16"),
"Shoot": SubResource("Animation_creca"),
"normal": SubResource("Animation_8vmw1")
}

[sub_resource type="Animation" id="Animation_q36re"]
resource_name = "Hit"
length = 1.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:material:shader_parameter/active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, false, true, false, true, false, true, false, true, false, true, false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Hand/Pivot/Pistol:material:shader_parameter/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, false, true, false, true, false, true, false, true, false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Hurtbox:monitoring")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}

[sub_resource type="Animation" id="Animation_otwvt"]
resource_name = "Normal"
length = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:material:shader_parameter/active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Hand/Pivot/Pistol:material:shader_parameter/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Hurtbox:monitoring")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_ubivd"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:material:shader_parameter/active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Hand/Pivot/Pistol:material:shader_parameter/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Hurtbox:monitoring")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hl060"]
_data = {
"Hit": SubResource("Animation_q36re"),
"Normal": SubResource("Animation_otwvt"),
"RESET": SubResource("Animation_ubivd")
}

[node name="Player" type="CharacterBody2D" groups=["Player"]]
collision_layer = 2
collision_mask = 5
script = SubResource("GDScript_5mu8x")
movement_data = SubResource("Resource_v00pk")
stats = SubResource("Resource_8wiu6")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_nbr8w")
sprite_frames = SubResource("SpriteFrames_bx4yl")
animation = &"Idle"
autoplay = "Idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource("CapsuleShape2D_k161k")

[node name="Hand" type="Node2D" parent="."]

[node name="Pivot" type="Node2D" parent="Hand"]

[node name="Pistol" type="Sprite2D" parent="Hand/Pivot"]
material = SubResource("ShaderMaterial_dbnn4")
position = Vector2(10, -4)
texture = ExtResource("2_5qatb")
region_enabled = true
region_rect = Rect2(160, 64, 16, 16)

[node name="PistolBulletMarker" type="Marker2D" parent="Hand/Pivot/Pistol"]
visible = false
position = Vector2(6, -2)
gizmo_extents = 2.0

[node name="Hurtbox" parent="." groups=["Player"] instance=ExtResource("6_e3hcv")]
monitoring = false

[node name="CollisionShape2D" parent="Hurtbox" index="0"]
visible = false
shape = SubResource("RectangleShape2D_gpe5m")

[node name="ShootingAnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_x67tq")
}
autoplay = "normal"

[node name="HitAnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_hl060")
}
autoplay = "Normal"

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="."]

[connection signal="area_entered" from="Hurtbox" to="." method="_on_hurtbox_area_entered"]

[editable path="Hurtbox"]
